{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Urban Clap",
      "description": ""
    },
    "host": "localhost:5000",
    "tags": [
      {
        "name": "User",
        "description": "Endpoints related to user registration"
      }
    ],
    "paths": {
      "/user": {
        "get": {
          "description": "",
          "responses": {
            "default": {
              "description": "GET"
            }
          }
        }
      },
      "/user/signup": {
        "post": {
            "tags": ["User"],

          "summary": "User Signup",
          "description": "For Booking, You need to signup",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "John Doe"
                  },
                  "email": {
                    "example": "abc@gmail.com"
                  },
                  "password": {
                    "example": "password123"
                  },
                  "mobileno": {
                    "example": "1234567890"
                  },
                  "isAdmin": {
                    "example": true
                  },
                  "addresses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "addressType": {
                          "example": "home"
                        },
                        "street": {
                          "example": "123 Main St"
                        },
                        "city": {
                          "example": "New York"
                        },
                        "state": {
                          "example": "NY"
                        },
                        "postalCode": {
                          "example": "10001"
                        }
                      },
                      "required": ["addressType"]
                    }
                  }
                },
                "required": ["name", "email", "password", "mobileno", "addresses"]
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "409": {
              "description": "Conflict"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/user/login": {
        "post": {
          "summary": "User Login",

          "description": "User Login",
          "tags": ["User"],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "abc@gmail.com"
                  },
                  "password": {
                    "example": "password123"
                  }
                },
                "required": ["email", "password"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },"/login/verifyotp": {
        "post": {
        "tags": ["User"],
        "summary": "Need to Verify OTP",

          "description": "Endpoint for verifying OTP during login",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "abc@gmail.com"
                  },
                  "otp": {
                    "example": "123456"
                  }
                },
                "required": ["email", "otp"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/verifyAccessToken": {
        "post": {
          "tags": ["User"],
          "summary": "Verify Access Token here",

          "description": "Endpoint to verify an access token",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "$ref": "#/definitions/verifyTokenSchema"
              }
            }
          ],
          "responses": {
            "default": {
              "description": ""
            }
          }
        }
      },
      "/verifyRefreshToken": {
        "post": {
          "tags": ["User"],

          "summary": "Verify Refresh Token",
          "description": "Verify a refresh token to obtain the decoded payload",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "$ref": "#/definitions/VerifyRefreshTokenInput"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/DecodedToken"
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },"/CheckAdmin": {
        "post": {
          "tags": ["User"],

          "summary": "Check Admin Authorization",
          "description": "This endpoint checks if the user is authorized as an admin.",
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Authorized User: Admin"
            },
            "403": {
              "description": "Access Denied"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },"/bookingservice": {
        "post": {
          "tags": ["Booking"],

          "description": "Endpoint for creating a new booking",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "$ref": "#/definitions/Booking"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
 
      

    },
    "definitions": {
        "verifyTokenSchema": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "your_access_token_here"
            }
          },
          "required": ["token"]
        },
        "VerifyRefreshTokenInput": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "your_refresh_token_here"
            }
          },
          "required": ["token"]
        },
        "DecodedToken": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string",
              "example": "user123"
            },
            "exp": {
              "type": "number",
              "example": 1673708400
            }
          }
        },
        "securityDefinitions": {
         "BearerAuth": {
          "type": "apiKey",
          "name": "Authorization",
          "in": "header"
         }
      },"Booking": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "time": {
            "type": "string"
          }
        },
        "required": ["serviceId", "userId", "date", "time"]
      }
    }
}

  